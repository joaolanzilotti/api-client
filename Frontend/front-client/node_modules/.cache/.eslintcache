[{"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\index.js":"1","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\App.js":"2","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\routes.js":"3","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Login\\index.js":"4","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Users\\index.js":"5","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\NewUser\\index.js":"6","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Page404\\index.js":"7","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\services\\api.js":"8","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\components\\NavBar\\index.js":"9","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\NewAdress\\index.js":"10"},{"size":249,"mtime":1685363955895,"results":"11","hashOfConfig":"12"},{"size":165,"mtime":1684767862902,"results":"13","hashOfConfig":"12"},{"size":1213,"mtime":1685728275488,"results":"14","hashOfConfig":"12"},{"size":3157,"mtime":1685627135351,"results":"15","hashOfConfig":"12"},{"size":9317,"mtime":1685633360526,"results":"16","hashOfConfig":"12"},{"size":7375,"mtime":1685729970606,"results":"17","hashOfConfig":"12"},{"size":1352,"mtime":1685363313258,"results":"18","hashOfConfig":"12"},{"size":147,"mtime":1684767862920,"results":"19","hashOfConfig":"12"},{"size":2005,"mtime":1685624531481,"results":"20","hashOfConfig":"12"},{"size":5828,"mtime":1685728531686,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"v97cjc",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"25"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\index.js",[],[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\App.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\routes.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Login\\index.js",["57","58"],[],"import React, {useState} from 'react';\r\nimport loadingGif from '../../assets/loadingTwoWhite.gif';\r\n//Biblioteca para Enviar as rotas\r\nimport {useNavigate} from \"react-router-dom\";\r\n//Servico para se conectar com a API\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css'\r\nimport logoImage from '../../assets/logo.png';\r\nimport {ToastContainer, toast} from \"react-toast\";\r\n\r\n//Propriedade com React - Definindo que o metodo vai receber Filhos (Children) e especificando dentro do H1 tamb√©m\r\nexport default function Login() {\r\n\r\n    const [showLoading, setShowLoading] = useState(false);\r\n\r\n    //Notifications React Toast\r\n\r\n    //Chamando a API para enviar os Dados\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    //Funcao navigate para Enviar a Rota\r\n    const navigate = useNavigate();\r\n\r\n    //funcao para nao fazer a pagina dar Refresh\r\n    async function login(e) {\r\n        e.preventDefault();\r\n        setShowLoading(true);\r\n        const data = {\r\n            email: email,\r\n            password,\r\n        }\r\n        try {\r\n            //Enviado a Requisicao Post para API\r\n            const response = await api.post('auth/signin', data);\r\n            //Armazenando o login no LocalStorage\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('accessToken', response.data.token);\r\n\r\n\r\n            navigate('/users');\r\n        } catch (err) {\r\n            toast.warn('Login failed! Try agains!');\r\n        } finally {\r\n            setShowLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <ToastContainer position=\"top-center\" delay=\"3000\"/>\r\n            <div className=\"login-container\">\r\n\r\n\r\n                <section className=\"form\">\r\n\r\n                    <img className=\"logo\" src={logoImage} alt=\"User Logo\"/>\r\n                    <form onSubmit={login}>\r\n                        <h1>Access your Account</h1>\r\n                        <div className=\"text-input\">\r\n                        <input type=\"text\" className=\"email\" id=\"input1\" placeholder=\"Email\" value={email}\r\n                               onChange={e => setEmail(e.target.value)}/>\r\n                        <label htmlFor=\"input1\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text-input\">\r\n                        <input type=\"password\" className=\"password\" placeholder=\"Password\" value={password}\r\n                               onChange={e => setPassword(e.target.value)}/>\r\n                        <label htmlFor=\"input1\">Password</label>\r\n                            </div>\r\n                        <button className=\"button\" type=\"submit\">\r\n                            {showLoading ? (\r\n                                <img className=\"loadingGif\" src={loadingGif} alt=\"Spinner\"/>\r\n                            ) : (\r\n                                'Login'\r\n                            )}\r\n                        </button>\r\n\r\n                    </form>\r\n\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Users\\index.js",["59","60","61","62"],[],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport {FiUserPlus, FiEdit, FiTrash2, FiAlertTriangle, FiX} from 'react-icons/fi';\r\nimport {toast, ToastContainer} from 'react-toast';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\n\r\nexport default function Users() {\r\n    const email = localStorage.getItem('email');\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    const username = localStorage.getItem('username');\r\n\r\n    const navigate = useNavigate();\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [showConfirmationAdress, setShowConfirmationAdress] = useState(false);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [selectedUserName, setSelectedUserName] = useState(null);\r\n    const [selectedAdress, setSelectedAdress] = useState(null);\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n\r\n    async function editAdress(idUser, idadress) {\r\n        try {\r\n            navigate(`/user/newadress/${idUser}/${idadress}`);\r\n        } catch (error) {\r\n            toast.error('Edit Failed! Try Again.');\r\n        }\r\n    }\r\n\r\n    async function editUser(id) {\r\n        try {\r\n            navigate(`/user/new/${id}`);\r\n        } catch (error) {\r\n            toast.error('Edit Failed! Try Again.');\r\n        }\r\n    }\r\n\r\n    async function deleteUser(id) {\r\n        try {\r\n            await api.delete(`/api/users/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                },\r\n            });\r\n            toast.success('User Deleted Successfully!');\r\n            setUsers(users.filter((user) => user.id !== id));\r\n        } catch (err) {\r\n            toast.error('Delete Failed!');\r\n        }\r\n    }\r\n\r\n    async function deleteAdress(id) {\r\n        try {\r\n            await api.delete(`/api/adress/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                },\r\n            });\r\n            toast.success('Adress Deleted Successfully!');\r\n            setUsers(users.filter((user) => user.adress.id !== id));\r\n\r\n        } catch (err) {\r\n            toast.error('Delete Failed!');\r\n        }\r\n    }\r\n\r\n    async function fetchMoreUsers() {\r\n        const response = await api.get('/api/users', {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            params: {\r\n                page: page,\r\n                size: 4,\r\n            },\r\n        });\r\n\r\n        setUsers([...users, ...response.data._embedded.userDTOList]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    async function dataUsername() {\r\n        try {\r\n            const response = await api.get(`/api/users/findUserByEmail/${email}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                }\r\n            });\r\n            localStorage.setItem(\"username\", response.data.name);\r\n        } catch (error) {\r\n            // Lida com erros na chamada √† API\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    function handleDeleteClick(id, name) {\r\n        setSelectedUserId(id);\r\n        setSelectedUserName(name)\r\n        setSelectedAdress(name);\r\n        setShowConfirmation(true);\r\n    }\r\n\r\n    function handleDeleteClickAdress(id, name) {\r\n        setSelectedUserId(id);\r\n        setSelectedAdress(name);\r\n        setShowConfirmationAdress(true);\r\n    }\r\n\r\n    function handleConfirmDelete() {\r\n        deleteUser(selectedUserId).then();\r\n        setShowConfirmation(false);\r\n    }\r\n\r\n    function handleConfirmDeleteAdress() {\r\n        deleteAdress(selectedUserId).then();\r\n        setShowConfirmationAdress(false);\r\n    }\r\n\r\n    function handleCancelDelete() {\r\n        setSelectedUserId(null);\r\n        setSelectedUserName(null);\r\n        setShowConfirmation(false);\r\n    }\r\n\r\n    function handleCancelDeleteAdress() {\r\n        setSelectedUserId(null);\r\n        setSelectedAdress(null);\r\n        setShowConfirmationAdress(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dataUsername().then();\r\n    });\r\n\r\n    // useEffect √© para carregar a tela assim que carregar o HTML, os dados vir√£o!\r\n    useEffect(() => {\r\n\r\n        fetchMoreUsers().then();\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div className=\"user-container\">\r\n\r\n            <ToastContainer position=\"top-center\" delay=\"3000\"/>\r\n\r\n\r\n            <div className=\"titleTable\">\r\n                <div className=\"Title\">\r\n                    <p>Registered Users</p>\r\n                </div>\r\n                <Link className=\"LinkNewUser\" to=\"/user/new/0\">\r\n                    <div className=\"buttonUser\">\r\n                        <FiUserPlus className=\"iconUserPlus\" size={20} color=\"white\"/>\r\n                        <h3>Add new User</h3>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n\r\n            <ul>\r\n                {users.map((user) => (\r\n                    <li key={user.id}>\r\n                        <strong>Name:</strong>\r\n                        <p>{user.name}</p>\r\n                        <strong>E-mail:</strong>\r\n                        <p>{user.email}</p>\r\n                        <strong>RG:</strong>\r\n                        <p>{user.rg.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{1})$/, '$1.$2.$3-$4')}</p>\r\n                        <strong>CPF:</strong>\r\n                        <p>{user.cpf.replace(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/, '$1.$2.$3-$4')}</p>\r\n                        <strong>Birthday:</strong>\r\n                        <p>\r\n                            {Intl.DateTimeFormat('pt-BR').format(new Date(user.birthDay))}\r\n                        </p>\r\n                        <strong>Cellphone:</strong>\r\n                        <p>{user.cellphone.replace(/^(\\d{2})(\\d{3})(\\d{2})(\\d{2})(\\d{2})$/, '($1) $2$3-$4$5')}</p>\r\n                        <strong>Adress:</strong>\r\n                        {user.adress ? (\r\n\r\n                            <p>\r\n                                {user.adress.street +\r\n                                    ', ' +\r\n                                    user.adress.district +\r\n                                    ', ' +\r\n                                    user.adress.number}\r\n                            </p>\r\n                        ) : (\r\n                            <p>Adress not registred</p>\r\n\r\n                        )}\r\n\r\n\r\n                        <button className=\"buttonEditUser\" type=\"button\">\r\n                            <FiEdit onClick={() => editUser(user.id)} size={20} color=\"#11009E\"/>\r\n                        </button>\r\n                        <button className=\"buttonTrashUser\" onClick={() => handleDeleteClick(user.id, user.name)}\r\n                                type=\"button\">\r\n                            <FiTrash2 size={20} color=\"#CD1818\"/>\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button className=\"buttonMorePage\" onClick={fetchMoreUsers} type=\"button\">\r\n                Load More\r\n            </button>\r\n\r\n            {\r\n                showConfirmation && (\r\n                    <div className=\"modal\">\r\n                        <button className=\"buttonCloseModal\" onClick={handleCancelDelete}><FiX size={20} color='gray'/>\r\n                        </button>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"iconContainer\">\r\n                                <FiAlertTriangle className=\"iconAlertModal\" size=\"45\" color='orange'/>\r\n                            </div>\r\n                            <h2>Confirmation</h2>\r\n                            <p>Are you sure you want to delete?</p>\r\n                            <h5>{selectedUserName}</h5>\r\n                            <button className=\"buttonConfirmDialog\" onClick={handleConfirmDelete}>Delete</button>\r\n                            <button className=\"buttonCancelDialog\" onClick={handleCancelDelete}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            {\r\n                showConfirmationAdress && (\r\n                    <div className=\"modal\">\r\n                        <button className=\"buttonCloseModal\" onClick={handleCancelDeleteAdress}><FiX size={20}\r\n                                                                                                     color='gray'/>\r\n                        </button>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"iconContainer\">\r\n                                <FiAlertTriangle className=\"iconAlertModal\" size=\"45\" color='orange'/>\r\n                            </div>\r\n                            <h2>Confirmation</h2>\r\n                            <p>Are you sure you want to delete adress?</p>\r\n                            <h5>{selectedAdress}</h5>\r\n                            <button className=\"buttonConfirmDialog\" onClick={handleConfirmDeleteAdress}>Delete</button>\r\n                            <button className=\"buttonCancelDialog\" onClick={handleCancelDeleteAdress}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\NewUser\\index.js",["63","64","65","66"],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Page404\\index.js",["67","68","69","70","71","72","73","74","75","76","77"],[],"import React, {useEffect, useState} from 'react';\r\nimport './styles.css';\r\nimport loadingGif from '../../assets/loadingTwoWhite.gif';\r\nimport homeadress from '../../assets/homeadress.png';\r\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport {FiArrowLeft, FiUserPlus} from \"react-icons/fi\";\r\nimport {ToastContainer, toast} from \"react-toast\";\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Page404() {\r\n\r\n\r\n    return (\r\n        <section className=\"page_404\">\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"container-text-gif\">\r\n                            <div className=\"four_zero_four_bg\">\r\n                                <h1 className=\"text-center\">404</h1>\r\n                            </div>\r\n                            <div className=\"contant_box_404\">\r\n                                <h3 className=\"h2\"> Look like you`re lost</h3>\r\n                                <p>the page you are looking for not avaible!</p>\r\n                                <Link to=\"/users\" className=\"link_404\">Go To Home</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\services\\api.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\components\\NavBar\\index.js",["78","79","80","81","82","83","84"],[],"import React, {useEffect, useState} from 'react';\r\nimport './styles.css';\r\nimport loadingGif from '../../assets/loadingTwoWhite.gif';\r\nimport logoJP from '../../assets/logoJP.png';\r\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport {FiLogOut, FiList, FiX} from \"react-icons/fi\";\r\nimport {ToastContainer, toast} from \"react-toast\";\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function NavBar() {\r\n\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const username = localStorage.getItem('username');\r\n    const navigate = useNavigate();\r\n\r\n    async function logout() {\r\n        localStorage.clear();\r\n        navigate('/');\r\n    }\r\n\r\n    const handleToggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar\">\r\n                <a href=\"/users\" className=\"logo\">\r\n                    <img src={logoJP} alt=\"logoJP\"/>\r\n                    <span>\r\n          Welcome, <strong>{username}</strong>\r\n        </span>\r\n                </a>\r\n\r\n                <input type=\"checkbox\" id=\"toggler\" checked={isMenuOpen} onChange={handleToggleMenu}/>\r\n                <label htmlFor=\"toggler\">\r\n                    {isMenuOpen ? <FiX size={26} color=\"black\"/> : <FiList size={26} color=\"black\"/>}\r\n                </label>\r\n                <div className={`menu ${isMenuOpen ? 'open' : ''}`}>\r\n                    <ul className=\"list\">\r\n                        <li><a href=\"/users\">Home</a></li>\r\n                        <li><a href=\"/users\">Users</a></li>\r\n                        <li className=\"liLogout\"><button className=\"buttonLogout\" type=\"button\"><FiLogOut className=\"liIconLogout\" onClick={() => logout()} size={20}/></button></li>\r\n                    </ul>\r\n                </div>\r\n                <button type=\"button\" className=\"logout\"><FiLogOut className=\"iconLogout\" onClick={() => logout()} size={24}/></button>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\NewAdress\\index.js",["85","86"],[],{"ruleId":"87","severity":1,"message":"88","line":21,"column":12,"nodeType":"89","messageId":"90","endLine":21,"endColumn":20},{"ruleId":"87","severity":1,"message":"91","line":21,"column":22,"nodeType":"89","messageId":"90","endLine":21,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":14,"column":11,"nodeType":"89","messageId":"90","endLine":14,"endColumn":19},{"ruleId":"87","severity":1,"message":"92","line":26,"column":20,"nodeType":"89","messageId":"90","endLine":26,"endColumn":30},{"ruleId":"87","severity":1,"message":"93","line":108,"column":14,"nodeType":"89","messageId":"90","endLine":108,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":144,"column":8,"nodeType":"96","endLine":144,"endColumn":10,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"98","line":6,"column":22,"nodeType":"89","messageId":"90","endLine":6,"endColumn":32},{"ruleId":"87","severity":1,"message":"99","line":23,"column":12,"nodeType":"89","messageId":"90","endLine":23,"endColumn":18},{"ruleId":"87","severity":1,"message":"100","line":25,"column":11,"nodeType":"89","messageId":"90","endLine":25,"endColumn":22},{"ruleId":"94","severity":1,"message":"101","line":65,"column":8,"nodeType":"96","endLine":65,"endColumn":16,"suggestions":"102"},{"ruleId":"87","severity":1,"message":"103","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"104","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"105","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":18},{"ruleId":"87","severity":1,"message":"106","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":18},{"ruleId":"87","severity":1,"message":"107","line":5,"column":15,"nodeType":"89","messageId":"90","endLine":5,"endColumn":26},{"ruleId":"87","severity":1,"message":"108","line":5,"column":28,"nodeType":"89","messageId":"90","endLine":5,"endColumn":37},{"ruleId":"87","severity":1,"message":"109","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"98","line":6,"column":22,"nodeType":"89","messageId":"90","endLine":6,"endColumn":32},{"ruleId":"87","severity":1,"message":"110","line":7,"column":9,"nodeType":"89","messageId":"90","endLine":7,"endColumn":23},{"ruleId":"87","severity":1,"message":"111","line":7,"column":25,"nodeType":"89","messageId":"90","endLine":7,"endColumn":30},{"ruleId":"87","severity":1,"message":"112","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":11},{"ruleId":"87","severity":1,"message":"103","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"105","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":18},{"ruleId":"87","severity":1,"message":"113","line":5,"column":9,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"108","line":5,"column":28,"nodeType":"89","messageId":"90","endLine":5,"endColumn":37},{"ruleId":"87","severity":1,"message":"110","line":7,"column":9,"nodeType":"89","messageId":"90","endLine":7,"endColumn":23},{"ruleId":"87","severity":1,"message":"111","line":7,"column":25,"nodeType":"89","messageId":"90","endLine":7,"endColumn":30},{"ruleId":"87","severity":1,"message":"112","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":11},{"ruleId":"87","severity":1,"message":"98","line":6,"column":22,"nodeType":"89","messageId":"90","endLine":6,"endColumn":32},{"ruleId":"94","severity":1,"message":"114","line":58,"column":8,"nodeType":"96","endLine":58,"endColumn":18,"suggestions":"115"},"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'setUsername' is assigned a value but never used.","'editAdress' is defined but never used.","'handleDeleteClickAdress' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMoreUsers'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'FiUserPlus' is defined but never used.","'adress' is assigned a value but never used.","'emailLogged' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["117"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'loadingGif' is defined but never used.","'homeadress' is defined but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used.","'FiArrowLeft' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'api' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loadAdress'. Either include it or remove the dependency array.",["118"],{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [fetchMoreUsers]",{"range":"125","text":"126"},"Update the dependencies array to be: [loadUser, userId]",{"range":"127","text":"128"},"Update the dependencies array to be: [adressId, loadAdress]",{"range":"129","text":"130"},[4340,4342],"[fetchMoreUsers]",[2223,2231],"[loadUser, userId]",[1865,1875],"[adressId, loadAdress]"]