[{"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\index.js":"1","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\App.js":"2","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\routes.js":"3","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Login\\index.js":"4","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\services\\api.js":"5","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Users\\index.js":"6","C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\NewUser\\index.js":"7"},{"size":247,"mtime":1684767862914,"results":"8","hashOfConfig":"9"},{"size":165,"mtime":1684767862902,"results":"10","hashOfConfig":"9"},{"size":564,"mtime":1684942091685,"results":"11","hashOfConfig":"9"},{"size":2745,"mtime":1684943082090,"results":"12","hashOfConfig":"9"},{"size":147,"mtime":1684767862920,"results":"13","hashOfConfig":"9"},{"size":6241,"mtime":1684942849214,"results":"14","hashOfConfig":"9"},{"size":5821,"mtime":1684943040196,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v97cjc",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\index.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\App.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\routes.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Login\\index.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\services\\api.js",[],[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\Users\\index.js",["39","40"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FiUserPlus, FiLogOut, FiEdit, FiTrash2, FiAlertTriangle, FiX } from 'react-icons/fi';\r\nimport { toast } from 'react-toast';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\nimport logoJP from '../../assets/logoJP.png';\r\n\r\nexport default function Users() {\r\n    const username = localStorage.getItem('email');\r\n    const accessToken = localStorage.getItem('accessToken');\r\n\r\n    const navigate = useNavigate();\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [selectedUserName, setSelectedUserName] = useState(null);\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n\r\n    async function logout() {\r\n        localStorage.clear();\r\n        navigate('/');\r\n    }\r\n\r\n    async function editUser(id) {\r\n        try {\r\n            navigate(`/user/new/${id}`);\r\n        } catch (error) {\r\n            toast.error('Edit Failed! Try Again.');\r\n        }\r\n    }\r\n\r\n    async function deleteUser(id) {\r\n        try {\r\n            await api.delete(`/api/users/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                },\r\n            });\r\n            setUsers(users.filter((client) => client.id !== id));\r\n            toast.success('User Deleted Successfully!');\r\n        } catch (err) {\r\n            toast.error('Delete Failed!');\r\n        }\r\n    }\r\n\r\n    async function fetchMoreUsers() {\r\n        const response = await api.get('/api/users', {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            params: {\r\n                page: page,\r\n                size: 4,\r\n            },\r\n        });\r\n\r\n        setUsers([...users, ...response.data._embedded.userDTOList]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    function handleDeleteClick(id, name) {\r\n        setSelectedUserId(id);\r\n        setSelectedUserName(name)\r\n        setShowConfirmation(true);\r\n    }\r\n\r\n    function handleConfirmDelete() {\r\n        deleteUser(selectedUserId);\r\n        setShowConfirmation(false);\r\n    }\r\n\r\n    function handleCancelDelete() {\r\n        setSelectedUserId(null);\r\n        setSelectedUserName(null);\r\n        setShowConfirmation(false);\r\n    }\r\n\r\n    // useEffect é para carregar a tela assim que carregar o HTML, os dados virão!\r\n    useEffect(() => {\r\n        fetchMoreUsers().then();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user-container\">\r\n            <header>\r\n                <img src={logoJP} alt=\"JP\" />\r\n                <span>\r\n          <strong>Welcome</strong>\r\n        </span>\r\n                <Link className=\"buttonUser\" to=\"/user/new/0\">\r\n                    <div className=\"container-button\">\r\n                        <div className=\"iconUserPlus\">\r\n                            <FiUserPlus size={24} color=\"white\" />\r\n                        </div>\r\n                        <div className=\"textButton\">Add new User</div>\r\n                    </div>\r\n                </Link>\r\n\r\n                <button onClick={logout} className=\"buttonPower\" type=\"button\">\r\n                    <FiLogOut size={18} color=\"#251FC5\" />\r\n                </button>\r\n            </header>\r\n            <h1>Registered Users</h1>\r\n            <ul>\r\n                {users.map((user) => (\r\n                    <li key={user.id}>\r\n                        <strong>Name:</strong>\r\n                        <p>{user.name}</p>\r\n                        <strong>E-mail:</strong>\r\n                        <p>{user.email}</p>\r\n                        <strong>RG:</strong>\r\n                        <p>{user.rg}</p>\r\n                        <strong>CPF:</strong>\r\n                        <p>{user.cpf}</p>\r\n                        <strong>Birthday:</strong>\r\n                        <p>\r\n                            {Intl.DateTimeFormat('pt-BR').format(new Date(user.birthDay))}\r\n                        </p>\r\n                        <strong>Cellphone:</strong>\r\n                        <p>{user.cellphone}</p>\r\n                        <strong>Adress:</strong>\r\n                        {user.adress ? (\r\n                            <p>\r\n                                {user.adress.street +\r\n                                    ', ' +\r\n                                    user.adress.district +\r\n                                    ', ' +\r\n                                    user.adress.number}\r\n                            </p>\r\n                        ) : (\r\n                            <p>Endereço não disponível</p>\r\n                        )}\r\n\r\n                        <button type=\"button\">\r\n                            <FiEdit onClick={() => editUser(user.id)} size={20} color=\"#251FC5\" />\r\n                        </button>\r\n                        <button onClick={() => handleDeleteClick(user.id, user.name)} type=\"button\">\r\n                            <FiTrash2 size={20} color=\"#251FC5\" />\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button className=\"buttonMorePage\" onClick={fetchMoreUsers} type=\"button\">\r\n                Load More\r\n            </button>\r\n\r\n            {showConfirmation && (\r\n                <div className=\"modal\">\r\n                    <button className=\"buttonCloseModal\" onClick={handleCancelDelete}><FiX size={20} color='gray' /></button>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"iconContainer\">\r\n                        <FiAlertTriangle className=\"iconAlertModal\" size=\"45\" color='orange' />\r\n                        </div>\r\n                        <h2>Confirmation</h2>\r\n                        <p>Are you sure you want to delete user?</p>\r\n                        <h5>{selectedUserName}</h5>\r\n                        <button className=\"buttonConfirmDialog\" onClick={handleConfirmDelete}>Delete</button>\r\n                        <button className=\"buttonCancelDialog\" onClick={handleCancelDelete}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n",[],"C:\\Users\\joaoferretti\\Documents\\ProjetosSpring\\api-client\\Frontend\\front-client\\src\\pages\\NewUser\\index.js",["41","42","43","44"],[],{"ruleId":"45","severity":1,"message":"46","line":13,"column":11,"nodeType":"47","messageId":"48","endLine":13,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":86,"column":8,"nodeType":"51","endLine":86,"endColumn":10,"suggestions":"52"},{"ruleId":"45","severity":1,"message":"53","line":6,"column":22,"nodeType":"47","messageId":"48","endLine":6,"endColumn":32},{"ruleId":"45","severity":1,"message":"54","line":22,"column":12,"nodeType":"47","messageId":"48","endLine":22,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":24,"column":11,"nodeType":"47","messageId":"48","endLine":24,"endColumn":19},{"ruleId":"49","severity":1,"message":"55","line":64,"column":8,"nodeType":"51","endLine":64,"endColumn":16,"suggestions":"56"},"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMoreUsers'. Either include it or remove the dependency array.","ArrayExpression",["57"],"'FiUserPlus' is defined but never used.","'adress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["58"],{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [fetchMoreUsers]",{"range":"63","text":"64"},"Update the dependencies array to be: [loadUser, userId]",{"range":"65","text":"66"},[2562,2564],"[fetchMoreUsers]",[2168,2176],"[loadUser, userId]"]